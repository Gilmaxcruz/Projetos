// <auto-generated />
using System;
using Mantimentos.App.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Mantimentos.App.Data.Migrations
{
    /// <summary>
    /// Migration do projeto, script sobre encotrado na pasta do projeto \sql\CreateBanco_Mantimentos.sql
    /// </summary>
    [DbContext(typeof(MantimentoDbContext))]
    partial class MantimentoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MantimentoMovimento", b =>
                {
                    b.Property<Guid>("MantimentosId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MovimentosId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MantimentosId", "MovimentosId");

                    b.HasIndex("MovimentosId");

                    b.ToTable("MantimentoMovimento");
                });

            modelBuilder.Entity("Mantimentos.App.Business.Models.Categoria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CategoriaNome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("Mantimentos.App.Business.Models.Mantimento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Capacidade")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ConteudoAtual")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<double>("Estoque")
                        .HasColumnType("float");

                    b.Property<double>("EstoqueMin")
                        .HasColumnType("float");

                    b.Property<string>("Imagem")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("MarcaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TipoMantimentoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UnidadeSigla")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("Validade")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MarcaId");

                    b.HasIndex("TipoMantimentoId");

                    b.HasIndex("UnidadeSigla");

                    b.ToTable("Mantimentos");
                });

            modelBuilder.Entity("Mantimentos.App.Business.Models.Marca", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Marcas");
                });

            modelBuilder.Entity("Mantimentos.App.Business.Models.Movimento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MantimentoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Quantidade")
                        .HasColumnType("float");

                    b.Property<int>("TipoMovimento")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Movimentos");
                });

            modelBuilder.Entity("Mantimentos.App.Business.Models.TpMantimento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("Obrigatorio")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("TpMantimentos");
                });

            modelBuilder.Entity("Mantimentos.App.Business.Models.TpMantimentoCategoria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CategoriaId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MantimentoTpId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("CategoriaId1");

                    b.HasIndex("MantimentoTpId");

                    b.ToTable("TpMantimentoCategorias");
                });

            modelBuilder.Entity("Mantimentos.App.Business.Models.UnidadeMedida", b =>
                {
                    b.Property<string>("Sigla")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Unidade")
                        .IsRequired()
                        .HasColumnType("varchar(60)");

                    b.HasKey("Sigla");

                    b.ToTable("UnidadeMedidas");
                });

            modelBuilder.Entity("MantimentoMovimento", b =>
                {
                    b.HasOne("Mantimentos.App.Business.Models.Mantimento", null)
                        .WithMany()
                        .HasForeignKey("MantimentosId")
                        .IsRequired();

                    b.HasOne("Mantimentos.App.Business.Models.Movimento", null)
                        .WithMany()
                        .HasForeignKey("MovimentosId")
                        .IsRequired();
                });

            modelBuilder.Entity("Mantimentos.App.Business.Models.Mantimento", b =>
                {
                    b.HasOne("Mantimentos.App.Business.Models.Marca", "Marca")
                        .WithMany()
                        .HasForeignKey("MarcaId")
                        .IsRequired();

                    b.HasOne("Mantimentos.App.Business.Models.TpMantimento", "TpMantimento")
                        .WithMany()
                        .HasForeignKey("TipoMantimentoId")
                        .IsRequired();

                    b.HasOne("Mantimentos.App.Business.Models.UnidadeMedida", "UnidadeMedida")
                        .WithMany()
                        .HasForeignKey("UnidadeSigla");

                    b.Navigation("Marca");

                    b.Navigation("TpMantimento");

                    b.Navigation("UnidadeMedida");
                });

            modelBuilder.Entity("Mantimentos.App.Business.Models.TpMantimentoCategoria", b =>
                {
                    b.HasOne("Mantimentos.App.Business.Models.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .IsRequired();

                    b.HasOne("Mantimentos.App.Business.Models.Categoria", null)
                        .WithMany("TpMantimentoCategoria")
                        .HasForeignKey("CategoriaId1");

                    b.HasOne("Mantimentos.App.Business.Models.TpMantimento", "TpMantimento")
                        .WithMany("TpMantimentoCategoria")
                        .HasForeignKey("MantimentoTpId")
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("TpMantimento");
                });

            modelBuilder.Entity("Mantimentos.App.Business.Models.Categoria", b =>
                {
                    b.Navigation("TpMantimentoCategoria");
                });

            modelBuilder.Entity("Mantimentos.App.Business.Models.TpMantimento", b =>
                {
                    b.Navigation("TpMantimentoCategoria");
                });
#pragma warning restore 612, 618
        }
    }
}
